// <auto-generated />
using ArtGalleryCRUD.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ArtGalleryCRUD.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210610223924_AddRelationa")]
    partial class AddRelationa
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ArtGalleryCRUD.Models.ArtistModel", b =>
                {
                    b.Property<int>("ArtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArtBio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArtImg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArtName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArtId");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("ArtGalleryCRUD.Models.BuyerModel", b =>
                {
                    b.Property<int>("ByrID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ByrMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ByrName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ByrPhone")
                        .HasColumnType("int");

                    b.HasKey("ByrID");

                    b.ToTable("Buyers");
                });

            modelBuilder.Entity("ArtGalleryCRUD.Models.GalleryModel", b =>
                {
                    b.Property<int>("GlrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GlrImg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GlrLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GlrName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GlrId");

                    b.ToTable("Galleries");
                });

            modelBuilder.Entity("ArtGalleryCRUD.Models.PaintingModel", b =>
                {
                    b.Property<int>("PntId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("BuyerId")
                        .HasColumnType("int");

                    b.Property<int>("GalleryId")
                        .HasColumnType("int");

                    b.Property<string>("PntImg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PntName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PntOverview")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PntPrice")
                        .HasColumnType("float");

                    b.HasKey("PntId");

                    b.HasIndex("ArtistId");

                    b.HasIndex("BuyerId");

                    b.HasIndex("GalleryId");

                    b.ToTable("Paintings");
                });

            modelBuilder.Entity("ArtGalleryCRUD.Models.PaintingModel", b =>
                {
                    b.HasOne("ArtGalleryCRUD.Models.ArtistModel", "Artist")
                        .WithMany("Paintings")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArtGalleryCRUD.Models.BuyerModel", "Buyer")
                        .WithMany("Paintings")
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArtGalleryCRUD.Models.GalleryModel", "Gallery")
                        .WithMany("Paintings")
                        .HasForeignKey("GalleryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Buyer");

                    b.Navigation("Gallery");
                });

            modelBuilder.Entity("ArtGalleryCRUD.Models.ArtistModel", b =>
                {
                    b.Navigation("Paintings");
                });

            modelBuilder.Entity("ArtGalleryCRUD.Models.BuyerModel", b =>
                {
                    b.Navigation("Paintings");
                });

            modelBuilder.Entity("ArtGalleryCRUD.Models.GalleryModel", b =>
                {
                    b.Navigation("Paintings");
                });
#pragma warning restore 612, 618
        }
    }
}
